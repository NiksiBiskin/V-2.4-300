[include ebb36_config.cfg]
[include stepper.cfg]
[include tmc.cfg]
[include autotune.cfg]
[include K-ShakeTune/*.cfg]
[include homing.cfg]
[include better_print_start.cfg]
[include KAMP_Settings.cfg]
[include fan.cfg]
[include _KOMB_Variables.cfg]
[include UNLOAD_FILAMENT.cfg]


[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_470035001951303439363932-if00
serial: /dev/ttyAMA0
restart_method: command

[force_move]
enable_force_move: True

[idle_timeout]
timeout: 7200

[mcu rpi]
serial: /tmp/klipper_host_mcu

[exclude_object]
[respond]

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 15000
max_z_velocity: 15
max_z_accel: 350
minimum_cruise_ratio: 0.5
square_corner_velocity: 10.0

[heater_bed]
heater_pin: PB4
sensor_type: Generic 3950
sensor_pin: PC3
max_power: 1.0
min_temp: 10
max_temp: 130
#control = pid
#pid_Kp=63.772 
#pid_Ki=3.241
#pid_Kd=313.681


[extruder]
#control: mpc
heater_power: 64
cooling_fan: fan
filament_density: 1.20
filament_heat_capacity: 1.8

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}


[gcode_macro M190] # Wait Bed Temp
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   # Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+5}  # Wait for bed temp (within n degrees)
    {% endif %}

[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ABS-GF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC-PBT-GF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}

[firmware_retraction]
retract_length: 0.75 ; length of filament (in mm) at G10/G11
unretract_extra_length: 0 ; length of additional filament (in mm) at G11
retract_speed: 30    #50
unretract_speed: 25  #30

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor Spider]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 10
max_temp: 80

[scanner]
#serial:
#   Path to the serial port for the idm device. Typically has the form
#   /dev/serial/by-id/usb-idm_idm_...
canbus_uuid: 8a22f28f0a1e
#adjust to suit your scanner 
#serial: /dev/serial/by-id/usb-cartographer_cartographer_
x_offset: 0                          
#adjust for your offset
y_offset: 21.953                        
#adjust for your offset
calibration_method: touch 
sensor: cartographer
sensor_alt: carto
#alternate name to call commands. CARTO_TOUCH etc
#scanner_touch_z_offset: 0.05         
#this is the default and will be overwritten and added to the DO NOT SAVE area by using UI to save z offset
mesh_runs: 2

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20

#####################################################################
#  Bed Mesh Definition
#####################################################################
[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 20,30
mesh_max: 270,250
#probe_count: 15,15
probe_count: 25,25
mesh_pps: 0,0   #2, 3
algorithm:bicubic
bicubic_tension: 0.1
fade_start: 0.1
fade_end: 10
fade_target: 0
zero_reference_position: 150,150

#####################################################################
#  Gantry Adjustment Routines
#####################################################################
[quad_gantry_level]
##  Min & Max gantry corners - measure from nozzle to respective belt positions
gantry_corners:
	-60,-10
	360,370
points:
   10,10
   10,250
   270,250
   270,10
speed: 2000
horizontal_move_z: 5 #5 ; MagProbe 20, Vinda or Omron 5
retries: 20
retry_tolerance: 0.0075
max_adjust: 20

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
#keep_raw_csv: True
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[input_shaper]
##  A frequency (in Hz) of the input shaper for X or Y axis. 
shaper_freq_x: 39.0
shaper_freq_y: 41.6
##  A type of the intput shaper for X or Y axia.
shaper_type_x: mzv
shaper_type_y: mzv
##  Damping ratios of vibrations of X and Y axes used by input shapers
##  to improve vibration suppression. Default value is 0.1 which is a
##  good all-round value for most printers. In most circumstances this
##  parameter requires no tuning and should not be changed.
damping_ratio_x: 0.118
damping_ratio_y: 0.069

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}


[include AFC/*.cfg]
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh PEi-Bed_Temp-115C]
#*# version = 1
#*# points =
#*# 	0.059585, 0.053986, 0.054985, 0.055125, 0.052606, 0.053026, 0.059891, 0.062002, 0.060099, 0.047613, 0.045334, 0.043015, 0.045475, 0.043312, 0.041566, 0.047995, 0.052000, 0.060766, 0.059986, 0.067102, 0.067550, 0.073499, 0.068084, 0.071853, 0.068413
#*# 	0.049252, 0.053011, 0.051388, 0.050039, 0.048587, 0.053632, 0.058327, 0.058555, 0.052891, 0.046817, 0.043397, 0.040405, 0.040306, 0.039866, 0.042727, 0.044166, 0.047927, 0.053363, 0.058625, 0.062234, 0.062644, 0.065382, 0.066647, 0.066135, 0.060202
#*# 	0.043731, 0.046999, 0.049257, 0.046690, 0.045120, 0.051161, 0.056250, 0.054903, 0.050086, 0.042210, 0.038210, 0.038845, 0.038277, 0.037136, 0.039607, 0.042021, 0.044625, 0.050124, 0.053634, 0.060624, 0.059059, 0.060585, 0.059355, 0.059411, 0.052218
#*# 	0.039699, 0.041574, 0.042669, 0.040772, 0.044929, 0.048205, 0.050762, 0.051060, 0.046303, 0.038652, 0.033334, 0.034455, 0.035065, 0.036941, 0.038321, 0.039914, 0.043097, 0.047891, 0.052620, 0.055066, 0.054953, 0.054447, 0.054006, 0.051202, 0.047446
#*# 	0.037976, 0.039593, 0.041235, 0.042555, 0.044265, 0.048484, 0.051768, 0.050790, 0.044751, 0.037965, 0.033681, 0.033502, 0.035301, 0.036155, 0.039043, 0.040548, 0.043178, 0.045227, 0.053367, 0.053974, 0.052518, 0.049143, 0.051774, 0.048364, 0.045714
#*# 	0.034623, 0.034175, 0.036646, 0.040342, 0.043503, 0.046857, 0.048295, 0.047947, 0.044197, 0.037097, 0.031066, 0.032395, 0.034566, 0.037650, 0.039449, 0.041572, 0.044333, 0.048624, 0.053792, 0.056121, 0.053584, 0.050282, 0.049140, 0.046959, 0.045709
#*# 	0.024769, 0.025808, 0.026835, 0.028470, 0.033376, 0.035608, 0.038765, 0.036575, 0.033480, 0.027685, 0.022992, 0.022275, 0.027074, 0.032058, 0.033332, 0.036391, 0.038217, 0.045811, 0.048854, 0.051688, 0.047508, 0.045338, 0.045237, 0.041095, 0.039355
#*# 	0.016872, 0.017950, 0.022420, 0.023645, 0.026387, 0.030299, 0.032095, 0.030349, 0.025435, 0.021128, 0.018152, 0.018623, 0.021892, 0.025656, 0.028930, 0.032373, 0.035723, 0.040482, 0.044758, 0.047241, 0.045486, 0.041128, 0.037060, 0.036713, 0.033329
#*# 	0.007977, 0.008518, 0.011080, 0.012592, 0.016998, 0.018667, 0.021809, 0.019748, 0.016520, 0.010020, 0.008755, 0.010580, 0.012023, 0.014503, 0.019654, 0.025148, 0.028588, 0.030864, 0.037322, 0.042180, 0.036772, 0.030088, 0.028480, 0.029441, 0.027116
#*# 	-0.000128, 0.001926, 0.004435, 0.005904, 0.008652, 0.012662, 0.014938, 0.015097, 0.012215, 0.008157, 0.005254, 0.002493, 0.009008, 0.010260, 0.014815, 0.018951, 0.025583, 0.029525, 0.032751, 0.034038, 0.029032, 0.029566, 0.023481, 0.020627, 0.016189
#*# 	-0.004172, -0.004240, -0.001491, 0.000288, 0.002948, 0.006668, 0.008000, 0.009802, 0.008618, 0.004690, 0.001367, 0.000991, 0.002049, 0.005496, 0.009043, 0.014919, 0.021071, 0.024573, 0.026675, 0.027756, 0.025101, 0.021229, 0.016793, 0.013894, 0.012450
#*# 	-0.004158, -0.006788, -0.004209, -0.006243, 0.003490, 0.003736, 0.005623, 0.006292, 0.005772, 0.003156, -0.000241, -0.000909, 0.000789, 0.005849, 0.007704, 0.012918, 0.016930, 0.023488, 0.023550, 0.024658, 0.023317, 0.019229, 0.013717, 0.010031, 0.009621
#*# 	-0.008144, -0.013207, -0.007718, -0.006472, -0.001431, -0.002030, 0.001438, 0.001771, 0.003518, -0.001538, -0.006574, -0.004551, 0.000472, 0.000761, 0.000901, 0.008596, 0.017252, 0.017784, 0.016890, 0.021295, 0.021782, 0.014492, 0.009635, 0.005673, 0.008149
#*# 	-0.014256, -0.009264, -0.003024, -0.004717, -0.006731, -0.000834, 0.005797, 0.001638, -0.000862, -0.007614, -0.001002, -0.001682, -0.003564, -0.003183, 0.004314, 0.011688, 0.012995, 0.014460, 0.024149, 0.022411, 0.018220, 0.014792, 0.014163, 0.006104, -0.000380
#*# 	-0.009913, -0.010084, -0.005322, -0.008608, -0.004194, -0.001418, 0.000706, 0.003329, -0.004384, -0.004911, -0.006582, -0.003095, -0.007908, -0.000908, 0.003208, 0.008386, 0.013448, 0.017128, 0.020071, 0.020634, 0.017303, 0.008374, 0.008974, 0.004890, 0.007301
#*# 	-0.012354, -0.014398, -0.003742, -0.006733, -0.005883, -0.003760, -0.002032, -0.002001, -0.003647, -0.007075, -0.013206, -0.005996, -0.006394, -0.002991, 0.002052, 0.008025, 0.013765, 0.017333, 0.017985, 0.015477, 0.019263, 0.011663, 0.006306, 0.002253, 0.000135
#*# 	-0.012015, -0.011007, -0.007825, -0.007690, -0.005370, -0.002905, -0.000635, -0.002423, -0.004106, -0.007343, -0.008511, -0.010241, -0.005874, -0.002001, 0.003244, 0.010654, 0.012232, 0.017456, 0.019108, 0.021349, 0.013279, 0.012963, 0.007773, 0.006419, -0.000085
#*# 	-0.010314, -0.012951, -0.004107, -0.005105, -0.005556, -0.000534, 0.003661, 0.000669, -0.003917, -0.002964, -0.004749, -0.004725, -0.003961, 0.002848, 0.010371, 0.010397, 0.017293, 0.020344, 0.024730, 0.018004, 0.018598, 0.015986, 0.015290, 0.007534, 0.002059
#*# 	-0.007441, -0.005573, -0.002113, -0.000157, 0.002688, 0.005083, 0.006244, 0.005796, 0.004406, 0.001255, -0.000834, -0.000432, 0.003066, 0.005781, 0.009897, 0.014827, 0.019249, 0.022363, 0.023425, 0.023507, 0.022890, 0.021289, 0.017000, 0.012276, 0.011489
#*# 	-0.001955, -0.000643, 0.003081, 0.006457, 0.007989, 0.009854, 0.011218, 0.010321, 0.008867, 0.005020, 0.002722, 0.002181, 0.003639, 0.006155, 0.011739, 0.016124, 0.020529, 0.023057, 0.025701, 0.027795, 0.026506, 0.024454, 0.021108, 0.021243, 0.020527
#*# 	0.006077, 0.006744, 0.010597, 0.012190, 0.016899, 0.017330, 0.018163, 0.017367, 0.014769, 0.011260, 0.009365, 0.009100, 0.009758, 0.013920, 0.017140, 0.020443, 0.023240, 0.026944, 0.031022, 0.033962, 0.032255, 0.030691, 0.027474, 0.027023, 0.027732
#*# 	0.013559, 0.013258, 0.015181, 0.017926, 0.020665, 0.023399, 0.024710, 0.023749, 0.021558, 0.018060, 0.016442, 0.016719, 0.018095, 0.020562, 0.024256, 0.026657, 0.028991, 0.031480, 0.036129, 0.037704, 0.035608, 0.033529, 0.031690, 0.032250, 0.033125
#*# 	0.023498, 0.022345, 0.025542, 0.028199, 0.031154, 0.032278, 0.034406, 0.034570, 0.031205, 0.026805, 0.025566, 0.025885, 0.026908, 0.029106, 0.032344, 0.035142, 0.036735, 0.038744, 0.041210, 0.043458, 0.041269, 0.038811, 0.037646, 0.038299, 0.038992
#*# 	0.027715, 0.027790, 0.030020, 0.033446, 0.035028, 0.037280, 0.037629, 0.036906, 0.034580, 0.032626, 0.031557, 0.031738, 0.032343, 0.033649, 0.035640, 0.037645, 0.038235, 0.038805, 0.041133, 0.044180, 0.042650, 0.039989, 0.038754, 0.039898, 0.041174
#*# 	0.035813, 0.035820, 0.038390, 0.039308, 0.040193, 0.040998, 0.043099, 0.042058, 0.041099, 0.040130, 0.039202, 0.038161, 0.038094, 0.039361, 0.039991, 0.039982, 0.040451, 0.041243, 0.043233, 0.045365, 0.044415, 0.042818, 0.040210, 0.040859, 0.043696
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.1
#*# min_x = 30.0
#*# max_x = 270.0
#*# min_y = 30.0
#*# max_y = 250.0
#*#
#*# [scanner model default]
#*# model_coef = 1.3959214806397942,
#*# 	1.8157031515786048,
#*# 	0.8191423027385212,
#*# 	0.5063154709891756,
#*# 	0.15106737777656917,
#*# 	-0.17669922530025706,
#*# 	0.06257016874010961,
#*# 	0.4378568259618578,
#*# 	0.12214955852837069,
#*# 	-0.13079591938139828
#*# model_domain = 3.192692450730284e-07,3.319341707653391e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 32.275055
#*# model_offset = 0.00000
#*#
#*# [scanner]
#*# scanner_touch_threshold = 4250
#*# scanner_touch_z_offset = 0.130
#*#
#*# [extruder]
#*# control = mpc
#*# block_heat_capacity = 11.7607
#*# sensor_responsiveness = 0.0986554
#*# ambient_transfer = 0.103846
#*# fan_ambient_transfer = 0.103846, 0.107107, 0.112086, 0.113878, 0.119992, 0.117677, 0.113615, 0.12425, 0.122694, 0.118748, 0.118872
#*#
#*# [heater_bed]
#*# pid_version = 1
#*# pid_target = 110.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 63.288
#*# pid_ki = 3.180
#*# pid_kd = 314.856
