[include ebb36_config.cfg]
[include stepper.cfg]
[include tmc.cfg]
[include autotune.cfg]
[include K-ShakeTune/*.cfg]
[include homing.cfg]
[include better_print_start.cfg]
[include KAMP_Settings.cfg]
[include fan.cfg]
[include _KOMB_Variables.cfg]
[include UNLOAD_FILAMENT.cfg]


[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_470035001951303439363932-if00
serial: /dev/ttyAMA0
restart_method: command

[force_move]
enable_force_move: True

[idle_timeout]
timeout: 7200

[mcu rpi]
serial: /tmp/klipper_host_mcu

[exclude_object]
[respond]

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 15000
max_z_velocity: 15
max_z_accel: 350
minimum_cruise_ratio: 0.5
square_corner_velocity: 5.0

[heater_bed]
heater_pin: PB4
sensor_type: Generic 3950
sensor_pin: PC2
max_power: 1.0
min_temp: 10
max_temp: 130
#control = pid
#pid_Kp=63.772 
#pid_Ki=3.241
#pid_Kd=313.681


[extruder]
#control: mpc
heater_power: 64
cooling_fan: fan
filament_density: 1.20
filament_heat_capacity: 1.8

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}


[gcode_macro M190] # Wait Bed Temp
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   # Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+5}  # Wait for bed temp (within n degrees)
    {% endif %}

[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ABS-GF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC-PBT-GF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}

[firmware_retraction]
retract_length: 0.75 ; length of filament (in mm) at G10/G11
unretract_extra_length: 0 ; length of additional filament (in mm) at G11
retract_speed: 30    #50
unretract_speed: 25  #30

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor Spider]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 10
max_temp: 80

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[mcu scanner]
canbus_uuid: 8a22f28f0a1e

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21.953                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.02527
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20

#####################################################################
#  Bed Mesh Definition
#####################################################################
[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 20,30
mesh_max: 270,250
#probe_count: 15,15
probe_count: 25,25
mesh_pps: 0,0   #2, 3
algorithm:bicubic
bicubic_tension: 0.1
fade_start: 0.1
fade_end: 10
fade_target: 0
zero_reference_position: 150,150

#####################################################################
#  Gantry Adjustment Routines
#####################################################################
[quad_gantry_level]
##  Min & Max gantry corners - measure from nozzle to respective belt positions
gantry_corners:
	-60,-10
	360,370
points:
   10,10
   10,250
   270,250
   270,10
speed: 300
horizontal_move_z: 5 #5 ; MagProbe 20, Vinda or Omron 5
retries: 20
retry_tolerance: 0.0075
max_adjust: 20

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
#keep_raw_csv: True
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[input_shaper]
##  A frequency (in Hz) of the input shaper for X or Y axis. 
shaper_freq_x: 65.6
shaper_freq_y: 47.6
##  A type of the intput shaper for X or Y axia.
shaper_type_x: mzv
shaper_type_y: mzv
##  Damping ratios of vibrations of X and Y axes used by input shapers
##  to improve vibration suppression. Default value is 0.1 which is a
##  good all-round value for most printers. In most circumstances this
##  parameter requires no tuning and should not be changed.
damping_ratio_x: 0.067
damping_ratio_y: 0.095

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

#[include AFC/*.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh PEi-Bed_Temp-115C]
#*# version = 1
#*# points =
#*# 	0.059585, 0.053986, 0.054985, 0.055125, 0.052606, 0.053026, 0.059891, 0.062002, 0.060099, 0.047613, 0.045334, 0.043015, 0.045475, 0.043312, 0.041566, 0.047995, 0.052000, 0.060766, 0.059986, 0.067102, 0.067550, 0.073499, 0.068084, 0.071853, 0.068413
#*# 	0.049252, 0.053011, 0.051388, 0.050039, 0.048587, 0.053632, 0.058327, 0.058555, 0.052891, 0.046817, 0.043397, 0.040405, 0.040306, 0.039866, 0.042727, 0.044166, 0.047927, 0.053363, 0.058625, 0.062234, 0.062644, 0.065382, 0.066647, 0.066135, 0.060202
#*# 	0.043731, 0.046999, 0.049257, 0.046690, 0.045120, 0.051161, 0.056250, 0.054903, 0.050086, 0.042210, 0.038210, 0.038845, 0.038277, 0.037136, 0.039607, 0.042021, 0.044625, 0.050124, 0.053634, 0.060624, 0.059059, 0.060585, 0.059355, 0.059411, 0.052218
#*# 	0.039699, 0.041574, 0.042669, 0.040772, 0.044929, 0.048205, 0.050762, 0.051060, 0.046303, 0.038652, 0.033334, 0.034455, 0.035065, 0.036941, 0.038321, 0.039914, 0.043097, 0.047891, 0.052620, 0.055066, 0.054953, 0.054447, 0.054006, 0.051202, 0.047446
#*# 	0.037976, 0.039593, 0.041235, 0.042555, 0.044265, 0.048484, 0.051768, 0.050790, 0.044751, 0.037965, 0.033681, 0.033502, 0.035301, 0.036155, 0.039043, 0.040548, 0.043178, 0.045227, 0.053367, 0.053974, 0.052518, 0.049143, 0.051774, 0.048364, 0.045714
#*# 	0.034623, 0.034175, 0.036646, 0.040342, 0.043503, 0.046857, 0.048295, 0.047947, 0.044197, 0.037097, 0.031066, 0.032395, 0.034566, 0.037650, 0.039449, 0.041572, 0.044333, 0.048624, 0.053792, 0.056121, 0.053584, 0.050282, 0.049140, 0.046959, 0.045709
#*# 	0.024769, 0.025808, 0.026835, 0.028470, 0.033376, 0.035608, 0.038765, 0.036575, 0.033480, 0.027685, 0.022992, 0.022275, 0.027074, 0.032058, 0.033332, 0.036391, 0.038217, 0.045811, 0.048854, 0.051688, 0.047508, 0.045338, 0.045237, 0.041095, 0.039355
#*# 	0.016872, 0.017950, 0.022420, 0.023645, 0.026387, 0.030299, 0.032095, 0.030349, 0.025435, 0.021128, 0.018152, 0.018623, 0.021892, 0.025656, 0.028930, 0.032373, 0.035723, 0.040482, 0.044758, 0.047241, 0.045486, 0.041128, 0.037060, 0.036713, 0.033329
#*# 	0.007977, 0.008518, 0.011080, 0.012592, 0.016998, 0.018667, 0.021809, 0.019748, 0.016520, 0.010020, 0.008755, 0.010580, 0.012023, 0.014503, 0.019654, 0.025148, 0.028588, 0.030864, 0.037322, 0.042180, 0.036772, 0.030088, 0.028480, 0.029441, 0.027116
#*# 	-0.000128, 0.001926, 0.004435, 0.005904, 0.008652, 0.012662, 0.014938, 0.015097, 0.012215, 0.008157, 0.005254, 0.002493, 0.009008, 0.010260, 0.014815, 0.018951, 0.025583, 0.029525, 0.032751, 0.034038, 0.029032, 0.029566, 0.023481, 0.020627, 0.016189
#*# 	-0.004172, -0.004240, -0.001491, 0.000288, 0.002948, 0.006668, 0.008000, 0.009802, 0.008618, 0.004690, 0.001367, 0.000991, 0.002049, 0.005496, 0.009043, 0.014919, 0.021071, 0.024573, 0.026675, 0.027756, 0.025101, 0.021229, 0.016793, 0.013894, 0.012450
#*# 	-0.004158, -0.006788, -0.004209, -0.006243, 0.003490, 0.003736, 0.005623, 0.006292, 0.005772, 0.003156, -0.000241, -0.000909, 0.000789, 0.005849, 0.007704, 0.012918, 0.016930, 0.023488, 0.023550, 0.024658, 0.023317, 0.019229, 0.013717, 0.010031, 0.009621
#*# 	-0.008144, -0.013207, -0.007718, -0.006472, -0.001431, -0.002030, 0.001438, 0.001771, 0.003518, -0.001538, -0.006574, -0.004551, 0.000472, 0.000761, 0.000901, 0.008596, 0.017252, 0.017784, 0.016890, 0.021295, 0.021782, 0.014492, 0.009635, 0.005673, 0.008149
#*# 	-0.014256, -0.009264, -0.003024, -0.004717, -0.006731, -0.000834, 0.005797, 0.001638, -0.000862, -0.007614, -0.001002, -0.001682, -0.003564, -0.003183, 0.004314, 0.011688, 0.012995, 0.014460, 0.024149, 0.022411, 0.018220, 0.014792, 0.014163, 0.006104, -0.000380
#*# 	-0.009913, -0.010084, -0.005322, -0.008608, -0.004194, -0.001418, 0.000706, 0.003329, -0.004384, -0.004911, -0.006582, -0.003095, -0.007908, -0.000908, 0.003208, 0.008386, 0.013448, 0.017128, 0.020071, 0.020634, 0.017303, 0.008374, 0.008974, 0.004890, 0.007301
#*# 	-0.012354, -0.014398, -0.003742, -0.006733, -0.005883, -0.003760, -0.002032, -0.002001, -0.003647, -0.007075, -0.013206, -0.005996, -0.006394, -0.002991, 0.002052, 0.008025, 0.013765, 0.017333, 0.017985, 0.015477, 0.019263, 0.011663, 0.006306, 0.002253, 0.000135
#*# 	-0.012015, -0.011007, -0.007825, -0.007690, -0.005370, -0.002905, -0.000635, -0.002423, -0.004106, -0.007343, -0.008511, -0.010241, -0.005874, -0.002001, 0.003244, 0.010654, 0.012232, 0.017456, 0.019108, 0.021349, 0.013279, 0.012963, 0.007773, 0.006419, -0.000085
#*# 	-0.010314, -0.012951, -0.004107, -0.005105, -0.005556, -0.000534, 0.003661, 0.000669, -0.003917, -0.002964, -0.004749, -0.004725, -0.003961, 0.002848, 0.010371, 0.010397, 0.017293, 0.020344, 0.024730, 0.018004, 0.018598, 0.015986, 0.015290, 0.007534, 0.002059
#*# 	-0.007441, -0.005573, -0.002113, -0.000157, 0.002688, 0.005083, 0.006244, 0.005796, 0.004406, 0.001255, -0.000834, -0.000432, 0.003066, 0.005781, 0.009897, 0.014827, 0.019249, 0.022363, 0.023425, 0.023507, 0.022890, 0.021289, 0.017000, 0.012276, 0.011489
#*# 	-0.001955, -0.000643, 0.003081, 0.006457, 0.007989, 0.009854, 0.011218, 0.010321, 0.008867, 0.005020, 0.002722, 0.002181, 0.003639, 0.006155, 0.011739, 0.016124, 0.020529, 0.023057, 0.025701, 0.027795, 0.026506, 0.024454, 0.021108, 0.021243, 0.020527
#*# 	0.006077, 0.006744, 0.010597, 0.012190, 0.016899, 0.017330, 0.018163, 0.017367, 0.014769, 0.011260, 0.009365, 0.009100, 0.009758, 0.013920, 0.017140, 0.020443, 0.023240, 0.026944, 0.031022, 0.033962, 0.032255, 0.030691, 0.027474, 0.027023, 0.027732
#*# 	0.013559, 0.013258, 0.015181, 0.017926, 0.020665, 0.023399, 0.024710, 0.023749, 0.021558, 0.018060, 0.016442, 0.016719, 0.018095, 0.020562, 0.024256, 0.026657, 0.028991, 0.031480, 0.036129, 0.037704, 0.035608, 0.033529, 0.031690, 0.032250, 0.033125
#*# 	0.023498, 0.022345, 0.025542, 0.028199, 0.031154, 0.032278, 0.034406, 0.034570, 0.031205, 0.026805, 0.025566, 0.025885, 0.026908, 0.029106, 0.032344, 0.035142, 0.036735, 0.038744, 0.041210, 0.043458, 0.041269, 0.038811, 0.037646, 0.038299, 0.038992
#*# 	0.027715, 0.027790, 0.030020, 0.033446, 0.035028, 0.037280, 0.037629, 0.036906, 0.034580, 0.032626, 0.031557, 0.031738, 0.032343, 0.033649, 0.035640, 0.037645, 0.038235, 0.038805, 0.041133, 0.044180, 0.042650, 0.039989, 0.038754, 0.039898, 0.041174
#*# 	0.035813, 0.035820, 0.038390, 0.039308, 0.040193, 0.040998, 0.043099, 0.042058, 0.041099, 0.040130, 0.039202, 0.038161, 0.038094, 0.039361, 0.039991, 0.039982, 0.040451, 0.041243, 0.043233, 0.045365, 0.044415, 0.042818, 0.040210, 0.040859, 0.043696
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.1
#*# min_x = 30.0
#*# max_x = 270.0
#*# min_y = 30.0
#*# max_y = 250.0
#*#
#*# [scanner model default]
#*# model_coef = 1.420618149835426,
#*# 	1.7626325508331637,
#*# 	0.7273740066475174,
#*# 	0.18880399022860894,
#*# 	0.6081042000388971,
#*# 	1.1048269658758663,
#*# 	-0.6352875722141464,
#*# 	-1.3430419230617263,
#*# 	0.5277782141080181,
#*# 	0.7373566958792862
#*# model_domain = 3.1444570100896927e-07,3.3142970636717517e-07
#*# model_range = 0.200000,5.100000
#*# model_temp = 36.084118
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.1.0
#*#
#*# [scanner]
#*# scanner_touch_threshold = 3250
#*# scanner_touch_z_offset = 0.080
#*# mode = touch
#*# scanner_touch_speed = 3
#*#
#*# [extruder]
#*# control = mpc
#*# block_heat_capacity = 11.7607
#*# sensor_responsiveness = 0.0986554
#*# ambient_transfer = 0.103846
#*# fan_ambient_transfer = 0.103846, 0.107107, 0.112086, 0.113878, 0.119992, 0.117677, 0.113615, 0.12425, 0.122694, 0.118748, 0.118872
#*#
#*# [heater_bed]
#*# pid_version = 1
#*# pid_target = 110.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 64.593
#*# pid_ki = 3.113
#*# pid_kd = 335.078
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.060486, 0.058322, 0.058468, 0.054765, 0.056278, 0.053746, 0.056749, 0.058155, 0.053895, 0.053993, 0.043393, 0.034554, 0.040848, 0.036593, 0.031659, 0.044019, 0.046421, 0.045756, 0.057770, 0.054733, 0.057644, 0.050537, 0.048020, 0.056917, 0.064266
#*# 	0.061480, 0.059382, 0.056786, 0.056793, 0.052958, 0.052962, 0.056537, 0.056764, 0.054725, 0.050866, 0.041807, 0.037628, 0.036279, 0.035851, 0.037132, 0.039697, 0.043425, 0.047265, 0.050521, 0.050967, 0.048994, 0.045774, 0.048121, 0.051181, 0.056068
#*# 	0.056591, 0.053839, 0.052423, 0.053049, 0.049186, 0.049480, 0.052965, 0.054593, 0.053195, 0.046468, 0.039699, 0.035732, 0.032570, 0.031427, 0.032456, 0.036942, 0.037736, 0.040405, 0.044549, 0.045374, 0.042453, 0.039305, 0.041335, 0.046361, 0.050049
#*# 	0.053894, 0.051524, 0.049055, 0.048224, 0.045978, 0.046861, 0.050459, 0.051929, 0.050770, 0.045823, 0.036396, 0.032263, 0.030551, 0.029781, 0.029952, 0.033814, 0.035967, 0.037253, 0.039516, 0.041821, 0.039653, 0.034973, 0.036988, 0.042234, 0.047298
#*# 	0.054395, 0.051987, 0.050200, 0.048712, 0.046828, 0.048313, 0.052451, 0.052812, 0.051382, 0.043868, 0.035984, 0.031354, 0.031018, 0.031932, 0.031337, 0.032604, 0.034089, 0.037497, 0.038603, 0.039335, 0.038689, 0.034979, 0.035493, 0.040904, 0.046980
#*# 	0.048252, 0.046348, 0.044895, 0.043476, 0.040992, 0.043091, 0.047453, 0.047230, 0.043428, 0.037128, 0.029911, 0.024802, 0.024416, 0.026812, 0.025749, 0.023034, 0.025580, 0.029227, 0.032144, 0.033155, 0.030939, 0.028058, 0.029205, 0.033324, 0.039791
#*# 	0.040943, 0.037871, 0.036549, 0.035820, 0.034126, 0.035156, 0.039657, 0.040762, 0.036783, 0.028318, 0.021588, 0.017730, 0.016951, 0.017820, 0.016889, 0.013172, 0.014764, 0.018642, 0.023414, 0.023749, 0.021666, 0.018733, 0.020187, 0.024391, 0.031171
#*# 	0.036011, 0.033726, 0.032013, 0.032241, 0.031006, 0.031611, 0.034438, 0.035497, 0.031154, 0.023362, 0.016155, 0.012220, 0.013614, 0.013344, 0.010704, 0.008192, 0.008948, 0.012333, 0.015614, 0.018340, 0.016568, 0.013695, 0.015830, 0.020200, 0.026144
#*# 	0.033624, 0.032233, 0.031977, 0.030628, 0.030105, 0.030623, 0.031133, 0.029954, 0.027502, 0.020335, 0.013257, 0.009607, 0.012661, 0.012694, 0.007715, 0.005210, 0.006834, 0.008983, 0.011455, 0.013403, 0.014920, 0.011899, 0.011583, 0.017040, 0.022403
#*# 	0.033104, 0.032117, 0.032000, 0.031360, 0.029683, 0.030055, 0.029389, 0.026682, 0.023301, 0.018333, 0.012239, 0.008114, 0.010035, 0.010838, 0.007144, 0.005984, 0.008121, 0.010783, 0.011747, 0.013491, 0.013428, 0.011589, 0.010526, 0.014018, 0.019129
#*# 	0.029891, 0.027637, 0.027879, 0.027195, 0.023679, 0.023250, 0.022519, 0.019704, 0.015676, 0.011259, 0.006179, 0.003239, 0.003721, 0.002487, 0.001707, 0.002162, 0.003105, 0.006665, 0.008350, 0.008073, 0.007962, 0.006582, 0.006291, 0.009471, 0.012697
#*# 	0.027302, 0.024863, 0.024010, 0.024012, 0.021528, 0.018881, 0.018241, 0.016972, 0.010671, 0.005461, 0.001263, -0.002492, -0.001549, -0.001193, -0.003106, -0.001289, 0.000994, 0.002691, 0.004337, 0.005584, 0.004100, 0.003082, 0.002527, 0.005305, 0.010156
#*# 	0.029184, 0.027658, 0.024699, 0.024005, 0.021993, 0.020114, 0.018649, 0.015605, 0.012653, 0.006541, -0.001928, -0.004174, -0.002499, -0.002534, -0.003848, -0.001809, 0.000871, 0.003650, 0.003657, 0.003698, 0.005597, 0.001963, 0.002369, 0.003354, 0.005945
#*# 	0.031119, 0.028636, 0.026047, 0.023653, 0.022959, 0.022926, 0.022138, 0.018261, 0.012676, 0.007499, 0.001264, -0.005861, -0.003613, -0.002354, -0.004386, -0.001297, 0.002129, 0.004629, 0.005665, 0.006149, 0.005880, 0.003710, -0.000010, 0.001836, 0.007798
#*# 	0.028427, 0.025309, 0.023755, 0.023627, 0.022632, 0.023317, 0.023121, 0.018964, 0.013095, 0.006264, -0.000142, -0.006151, -0.008215, -0.007987, -0.005875, -0.003914, -0.002827, 0.001401, 0.002869, 0.003106, 0.001457, -0.002376, -0.002031, -0.002956, -0.000667
#*# 	0.029856, 0.026324, 0.024990, 0.026253, 0.025948, 0.025041, 0.024243, 0.021963, 0.015193, 0.009017, 0.003362, -0.003071, -0.005903, -0.007094, -0.006610, -0.001547, -0.000391, -0.000325, 0.003476, 0.003644, 0.001202, -0.001004, -0.005197, -0.003954, 0.000620
#*# 	0.030738, 0.027943, 0.026660, 0.029120, 0.028164, 0.027221, 0.024883, 0.021328, 0.017885, 0.011856, 0.005348, 0.001373, -0.001029, -0.003862, -0.001621, 0.001519, 0.002630, 0.004182, 0.002927, 0.006300, 0.002332, -0.003409, -0.002094, -0.002512, -0.002519
#*# 	0.033746, 0.032863, 0.032725, 0.033040, 0.032779, 0.032835, 0.031126, 0.027431, 0.023968, 0.020264, 0.014964, 0.009455, 0.008230, 0.007431, 0.005586, 0.008494, 0.010306, 0.009481, 0.009114, 0.009762, 0.007344, 0.004236, -0.001178, 0.002744, 0.006730
#*# 	0.037574, 0.038002, 0.036968, 0.039960, 0.037474, 0.039009, 0.037890, 0.034108, 0.031887, 0.026478, 0.022396, 0.018610, 0.015215, 0.013553, 0.015763, 0.015805, 0.015522, 0.018116, 0.016595, 0.019404, 0.014325, 0.009119, 0.011642, 0.010077, 0.011538
#*# 	0.048662, 0.047356, 0.047800, 0.048229, 0.046901, 0.046442, 0.046910, 0.045819, 0.042651, 0.036808, 0.034315, 0.029960, 0.026289, 0.025922, 0.024130, 0.025112, 0.026296, 0.027472, 0.029550, 0.029756, 0.023895, 0.022005, 0.020247, 0.021510, 0.024699
#*# 	0.060103, 0.057638, 0.055842, 0.057183, 0.055610, 0.058246, 0.055981, 0.053961, 0.053379, 0.047587, 0.043347, 0.041450, 0.038041, 0.034537, 0.035591, 0.035251, 0.036281, 0.036017, 0.035497, 0.039159, 0.034593, 0.030169, 0.032903, 0.032358, 0.033009
#*# 	0.065108, 0.062593, 0.059986, 0.060167, 0.062182, 0.062685, 0.060578, 0.058615, 0.057673, 0.053730, 0.050273, 0.045097, 0.044098, 0.043427, 0.039197, 0.039459, 0.040040, 0.039002, 0.038952, 0.040774, 0.038005, 0.036313, 0.036736, 0.036608, 0.041074
#*# 	0.065988, 0.065285, 0.063778, 0.063441, 0.064279, 0.067991, 0.066196, 0.062016, 0.061256, 0.057085, 0.053962, 0.050644, 0.046638, 0.045779, 0.042781, 0.040010, 0.042344, 0.041990, 0.041986, 0.043635, 0.041556, 0.039650, 0.041605, 0.041321, 0.044933
#*# 	0.068449, 0.067321, 0.067241, 0.069033, 0.070155, 0.071396, 0.071800, 0.069446, 0.064631, 0.060821, 0.059858, 0.055889, 0.050983, 0.048817, 0.046999, 0.045463, 0.042971, 0.044117, 0.044422, 0.043837, 0.040998, 0.042190, 0.044568, 0.045689, 0.047383
#*# 	0.072420, 0.071321, 0.072541, 0.075113, 0.075569, 0.076790, 0.077009, 0.076276, 0.072554, 0.067704, 0.066379, 0.064212, 0.060065, 0.055569, 0.053219, 0.052546, 0.050227, 0.049718, 0.050529, 0.049790, 0.048000, 0.049076, 0.053041, 0.056253, 0.059415
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.1
#*# min_x = 20.0
#*# max_x = 270.0
#*# min_y = 30.0
#*# max_y = 250.0
