[include ebb36_config.cfg]
[include stepper.cfg]
[include tmc.cfg]
[include autotune.cfg]
[include K-ShakeTune/*.cfg]
[include homing.cfg]
[include better_print_start.cfg]
[include KAMP_Settings.cfg]
[include fan.cfg]
[include _KOMB_Variables.cfg]
[include _AFC_RENAMED_UNLOAD_FILAMENT_.cfg]
[include mainsail.cfg]

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_470035001951303439363932-if00
serial: /dev/ttyAMA0
restart_method: command

[force_move]
enable_force_move: True

[idle_timeout]
timeout: 7200

[mcu rpi]
serial: /tmp/klipper_host_mcu

[exclude_object]
[respond]

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 15000
max_z_velocity: 15
max_z_accel: 350
minimum_cruise_ratio: 0.5
square_corner_velocity: 5.0

[heater_bed]
heater_pin: PB4
sensor_type: Generic 3950
sensor_pin: PC2
max_power: 1.0
min_temp: 10
max_temp: 130

[heater_bed]
#control: mpc
heater_power: 400
cooling_fan: fan_generic bed_fans

[extruder]
#control: mpc
heater_power: 64
cooling_fan: fan
filament_density: 1.20
filament_heat_capacity: 1.8

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}


[gcode_macro M190] # Wait Bed Temp
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   # Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+5}  # Wait for bed temp (within n degrees)
    {% endif %}

[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ABS-GF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC-PBT-GF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}

[firmware_retraction]
retract_length: 0.75 ; length of filament (in mm) at G10/G11
unretract_extra_length: 0 ; length of additional filament (in mm) at G11
retract_speed: 30    #50
unretract_speed: 25  #30

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor Spider]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 10
max_temp: 80

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[mcu scanner]
canbus_uuid: f8813c69bc20
#canbus_uuid: 08e5596c7aa0
canbus_interface: can0


[scanner]
mcu: scanner


#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21.953                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.02539
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0

#####################################################################
#  Bed Mesh Definition
#####################################################################
[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 20,30
mesh_max: 270,250
#probe_count: 15,15
probe_count: 25,25
mesh_pps: 0,0   #2, 3
algorithm:bicubic
bicubic_tension: 0.1
fade_start: 0.1
fade_end: 10
fade_target: 0
zero_reference_position: 150,150

#####################################################################
#  Gantry Adjustment Routines
#####################################################################
[quad_gantry_level]
##  Min & Max gantry corners - measure from nozzle to respective belt positions
gantry_corners:
	-60,-10
	360,370
points:
   10,10
   10,250
   270,250
   270,10
speed: 300
horizontal_move_z: 5 #5 ; MagProbe 20, Vinda or Omron 5
retries: 20
retry_tolerance: 0.0075
max_adjust: 20

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
#keep_raw_csv: True
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[input_shaper]
##  A frequency (in Hz) of the input shaper for X or Y axis. 
shaper_freq_x: 65.6
shaper_freq_y: 47.6
##  A type of the intput shaper for X or Y axia.
shaper_type_x: mzv
shaper_type_y: mzv
##  Damping ratios of vibrations of X and Y axes used by input shapers
##  to improve vibration suppression. Default value is 0.1 which is a
##  good all-round value for most printers. In most circumstances this
##  parameter requires no tuning and should not be changed.
damping_ratio_x: 0.067
damping_ratio_y: 0.095

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[include AFC/*.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = mpc
#*# block_heat_capacity = 11.7607
#*# sensor_responsiveness = 0.0986554
#*# ambient_transfer = 0.103846
#*# fan_ambient_transfer = 0.103846, 0.107107, 0.112086, 0.113878, 0.119992, 0.117677, 0.113615, 0.12425, 0.122694, 0.118748, 0.118872
#*#
#*# [heater_bed]
#*# pid_version = 1
#*# pid_target = 110.00
#*# pid_tolerance = 0.0200
#*# pid_kp = 64.593
#*# pid_ki = 3.113
#*# pid_kd = 335.078
#*# control = mpc
#*# block_heat_capacity = 61.7832
#*# sensor_responsiveness = 0.0291395
#*# ambient_transfer = 2.12628
#*# fan_ambient_transfer = 2.12628, 2.80898, 2.82288, 2.74357, 2.79415
#*#
#*# [scanner]
#*# mode = touch
#*# scanner_touch_threshold = 1500
#*# scanner_touch_speed = 2
#*#
#*# [scanner model default]
#*# model_coef = 1.4663900709161006,
#*# 	  1.806049105259671,
#*# 	  0.7572654461087908,
#*# 	  0.27951084730039344,
#*# 	  0.4342733654152048,
#*# 	  0.6455427909795173,
#*# 	  -0.3401949368010115,
#*# 	  -0.6585378233267333,
#*# 	  0.3313307349654944,
#*# 	  0.3780129439694403
#*# model_domain = 3.1684233779075934e-07,3.3071085192192876e-07
#*# model_range = 0.200000,5.100000
#*# model_temp = 70.827002
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.1.3
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.054126, 0.063132, 0.050876, 0.059388, 0.052481, 0.045365, 0.061330, 0.056110, 0.047607, 0.053954, 0.039664, 0.028071, 0.041287, 0.034640, 0.032786, 0.044271, 0.033231, 0.053885, 0.047224, 0.040990, 0.054845, 0.044277, 0.036219, 0.057101, 0.052115
#*# 	0.052741, 0.054678, 0.053591, 0.048552, 0.052560, 0.045757, 0.052786, 0.057519, 0.047779, 0.045864, 0.041938, 0.028870, 0.030644, 0.035296, 0.028706, 0.036312, 0.032992, 0.039911, 0.046290, 0.039659, 0.040113, 0.042558, 0.036494, 0.041901, 0.050885
#*# 	0.055181, 0.050271, 0.046761, 0.051604, 0.043471, 0.049325, 0.050391, 0.048711, 0.052533, 0.043262, 0.033264, 0.033926, 0.028148, 0.022749, 0.032417, 0.029512, 0.031264, 0.040250, 0.031617, 0.043667, 0.035157, 0.026274, 0.039043, 0.036415, 0.033280
#*# 	0.051824, 0.045635, 0.049866, 0.042824, 0.042568, 0.045678, 0.045414, 0.049902, 0.050792, 0.037917, 0.031809, 0.030207, 0.021936, 0.027086, 0.021258, 0.025960, 0.031544, 0.028202, 0.031944, 0.037411, 0.027788, 0.027394, 0.030338, 0.028331, 0.036399
#*# 	0.051449, 0.047162, 0.048568, 0.044833, 0.040563, 0.046410, 0.045087, 0.050432, 0.045695, 0.036271, 0.030663, 0.023172, 0.021168, 0.028454, 0.024110, 0.019806, 0.031033, 0.029089, 0.030028, 0.030608, 0.024596, 0.029751, 0.024006, 0.023962, 0.039001
#*# 	0.047593, 0.039559, 0.041334, 0.041661, 0.034003, 0.037936, 0.043967, 0.040191, 0.037566, 0.032527, 0.018940, 0.017761, 0.014200, 0.018636, 0.019235, 0.012648, 0.015775, 0.021200, 0.020356, 0.022740, 0.024630, 0.013741, 0.016908, 0.024333, 0.022735
#*# 	0.038952, 0.038458, 0.034683, 0.032407, 0.033786, 0.032517, 0.033440, 0.038880, 0.029086, 0.024632, 0.015276, 0.007680, 0.013455, 0.011099, 0.006164, 0.011587, 0.006650, 0.005944, 0.018905, 0.015834, 0.012209, 0.009892, 0.005703, 0.019151, 0.018418
#*# 	0.035737, 0.035993, 0.028186, 0.030749, 0.031336, 0.026954, 0.031410, 0.033868, 0.023375, 0.021481, 0.007618, 0.006648, 0.009365, 0.004724, 0.003815, 0.004222, -0.000121, 0.003387, 0.008433, 0.007671, 0.007630, 0.007000, 0.002870, 0.011722, 0.010445
#*# 	0.035060, 0.032420, 0.028941, 0.031112, 0.027891, 0.026496, 0.030462, 0.025716, 0.020591, 0.016501, 0.005736, 0.006727, 0.005342, 0.002786, 0.003264, -0.001400, -0.004495, 0.003882, 0.001838, 0.000959, 0.008203, 0.000641, 0.000329, 0.003950, 0.004845
#*# 	0.030152, 0.030905, 0.032110, 0.025358, 0.025923, 0.028157, 0.023577, 0.023622, 0.015057, 0.012241, 0.007862, -0.001010, 0.002671, 0.004450, -0.002476, -0.002967, 0.000113, -0.001580, 0.001906, 0.005535, -0.000748, 0.001801, -0.004501, 0.000190, 0.005767
#*# 	0.030909, 0.026412, 0.029700, 0.027152, 0.021826, 0.024400, 0.021775, 0.015603, 0.014307, 0.006655, -0.001401, -0.001301, -0.006196, -0.000799, -0.004965, -0.009329, -0.001334, -0.002726, -0.004346, 0.002379, -0.004065, -0.009607, -0.001859, -0.004329, -0.001492
#*# 	0.031151, 0.025389, 0.025167, 0.027529, 0.019781, 0.021909, 0.018214, 0.015404, 0.012588, 0.000853, -0.002231, -0.003972, -0.009365, -0.007137, -0.006677, -0.012065, -0.007570, -0.003398, -0.006135, -0.001253, -0.008939, -0.007910, -0.005336, -0.009568, -0.004676
#*# 	0.029258, 0.029221, 0.025729, 0.023623, 0.023878, 0.020649, 0.017113, 0.016570, 0.011133, 0.002998, -0.003818, -0.009131, -0.007929, -0.006311, -0.014398, -0.007826, -0.007170, -0.009772, -0.002676, -0.006215, -0.011362, -0.008165, -0.012654, -0.014229, -0.003297
#*# 	0.031393, 0.031062, 0.023817, 0.024539, 0.022782, 0.021986, 0.022268, 0.015768, 0.011782, 0.004573, -0.007121, -0.010209, -0.008791, -0.011864, -0.011667, -0.009762, -0.009247, -0.004884, -0.006083, -0.005285, -0.006295, -0.012763, -0.012847, -0.010470, -0.009492
#*# 	0.027655, 0.026916, 0.022350, 0.022409, 0.021053, 0.019313, 0.022245, 0.016242, 0.008097, 0.001855, -0.006126, -0.012324, -0.013179, -0.014885, -0.015064, -0.012045, -0.014954, -0.008544, -0.008080, -0.010748, -0.009593, -0.014928, -0.018755, -0.015529, -0.015373
#*# 	0.030291, 0.028034, 0.025940, 0.025232, 0.027438, 0.023697, 0.023779, 0.021826, 0.011982, 0.005963, 0.001256, -0.009118, -0.011008, -0.010903, -0.013766, -0.007645, -0.011846, -0.008943, -0.005181, -0.008771, -0.011052, -0.013071, -0.018896, -0.017734, -0.014351
#*# 	0.032970, 0.029377, 0.025846, 0.029361, 0.025544, 0.028807, 0.023517, 0.019036, 0.016101, 0.008186, 0.000278, -0.003776, -0.007405, -0.011059, -0.007347, -0.007289, -0.006503, -0.004219, -0.009490, -0.004693, -0.010357, -0.016566, -0.015204, -0.017343, -0.018915
#*# 	0.036152, 0.033313, 0.035243, 0.032004, 0.033197, 0.034760, 0.028874, 0.026756, 0.024865, 0.015566, 0.010214, 0.008252, 0.000213, 0.002678, -0.002280, 0.001135, 0.004981, -0.000405, 0.000175, 0.001188, -0.005686, -0.008365, -0.009365, -0.013593, -0.009734
#*# 	0.043122, 0.039835, 0.042552, 0.041097, 0.038589, 0.041425, 0.038373, 0.037126, 0.031741, 0.026567, 0.021475, 0.015946, 0.011135, 0.010903, 0.010179, 0.007697, 0.012124, 0.011523, 0.010342, 0.010095, 0.003059, 0.002541, -0.002548, -0.005501, 0.000734
#*# 	0.056099, 0.051793, 0.052517, 0.054629, 0.051419, 0.051584, 0.052467, 0.048326, 0.045276, 0.041271, 0.032604, 0.032767, 0.025038, 0.023006, 0.024594, 0.019934, 0.021244, 0.024444, 0.021877, 0.020697, 0.018565, 0.010395, 0.010932, 0.009691, 0.007749
#*# 	0.063148, 0.062546, 0.059620, 0.058506, 0.062024, 0.060359, 0.057341, 0.057536, 0.052791, 0.048981, 0.042074, 0.037175, 0.035784, 0.031578, 0.029559, 0.030059, 0.028571, 0.026532, 0.029181, 0.026742, 0.022861, 0.019872, 0.015476, 0.018842, 0.016673
#*# 	0.070567, 0.069761, 0.064208, 0.065311, 0.067482, 0.066067, 0.064797, 0.063569, 0.058834, 0.057419, 0.049503, 0.045478, 0.045178, 0.038204, 0.036811, 0.037040, 0.033287, 0.033780, 0.033136, 0.029680, 0.030160, 0.026524, 0.022421, 0.026070, 0.023903
#*# 	0.072244, 0.071333, 0.069999, 0.069654, 0.069933, 0.071220, 0.071953, 0.067255, 0.063716, 0.060879, 0.054746, 0.049844, 0.046379, 0.043011, 0.039937, 0.036962, 0.036333, 0.038254, 0.035443, 0.033434, 0.033999, 0.031502, 0.029629, 0.028908, 0.028943
#*# 	0.074666, 0.074273, 0.074169, 0.074683, 0.075247, 0.076461, 0.077061, 0.074828, 0.070187, 0.065966, 0.062786, 0.056413, 0.052708, 0.049190, 0.046705, 0.044600, 0.042684, 0.040974, 0.040634, 0.038224, 0.035352, 0.035812, 0.034595, 0.034872, 0.036481
#*# 	0.079407, 0.078203, 0.078932, 0.079992, 0.081224, 0.082052, 0.082487, 0.082166, 0.078677, 0.072769, 0.068961, 0.065046, 0.060519, 0.055517, 0.053279, 0.051981, 0.049496, 0.047223, 0.046165, 0.043790, 0.039766, 0.039246, 0.042321, 0.042100, 0.040844
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.1
#*# min_x = 20.0
#*# max_x = 270.0
#*# min_y = 30.0
#*# max_y = 250.0
